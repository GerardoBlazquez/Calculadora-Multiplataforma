---
import CalculatorIcon from "../icons/Calculador.astro";
const { modalId = "calc-modal-default" } = Astro.props;
import HistorialIcon from "../icons/Historial.astro";
---

<!-- Botón tipo Pills pero es un modal -->
<div
  class="relative inline-flex overflow-hidden rounded-full p-[1px] cursor-pointer"
>
  <span
    class="absolute inset-[-1000%] animate-[spin_2s_linear_infinite]
    bg-[conic-gradient(from_90deg_at_50%_50%,#B3EBF2_0%,#111827_50%,#B3EBF2_100%)]
    dark:bg-transparent
    dark:[background-image:conic-gradient(from_90deg_at_50%_50%,#FDE68A_0%,#D97706_50%,#FDE68A_100%)]"
  ></span>
  <button
    type="button"
    data-modal-id={modalId}
    class="relative z-10 space-x-2 inline-flex items-center justify-center w-full px-3 py-1 text-sm text-black bg-gray-100 rounded-full dark:bg-gray-800 dark:text-white/80 backdrop-blur-3xl whitespace-nowrap hover:font-bold"
  >
    <CalculatorIcon class="w-5 h-5" />
    <span>Probar</span>
  </button>
</div>





<!-- EJECUTABLE -->
<dialog
  id={modalId}
  class="rounded-lg p-6 bg-gray-100/95 shadow-2xl max-w-2xl w-full dark:bg-gray-900/90 text-black/80 dark:text-white"
>
  <h2 class="text-2xl font-semibold mb-2">Calculadora Multiplataforma</h2>
  <p class="mb-4">Proyecto desarrollado en varias plataformas, completamente funcional.</p>



<div class="relative w-full mb-4">
  <input
    id="input1"
    type="text"
    class="w-full text-xl p-2 pr-10 bg-gray-100 dark:bg-gray-900 dark:text-white text-black/80 rounded border"
    placeholder="0"
  />




  <!-- Icono de historial -->
  <span
    data-action="historialIcono"
    class="absolute right-3 top-1/2 -translate-y-1/2 text-gray-900 dark:text-white/80
         hover:text-blue-400 dark:hover:text-orange-400
         hover:scale-110 transition-transform duration-200 cursor-pointer"
  >
    <HistorialIcon />
  </span>




  <!-- Historial -->
  <div
    id="historialMenu"
    class="absolute right-3 top-full mt-2 w-60 max-h-64 overflow-auto bg-white dark:bg-gray-800 border dark:border-gray-700 shadow-lg rounded-lg z-50 text-sm hidden"
  >
    <h3 class="text-lg font-bold mb-2 px-3 pt-2">Historial</h3>
    <ul id="historialLista" class="space-y-1 px-3 pb-2 text-sm overflow-y-auto max-h-[40vh]"></ul>
    <button
      id="cerrarHistorial"
      class="m-3 px-3 py-1 dark:bg-orange-400 bg-blue-400 text-white rounded hover:bg-blue-700"
    >
      Cerrar historial
    </button>
  </div>
</div>
  




  <!-- Botonera  -->
  <div class="grid grid-cols-6 gap-2 mb-4">
    
    
  <!-- Primera fila  -->
    <button
      data-symbol="tan("
      class="bg-gray-400/30 dark:bg-gray-500 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
    >
      tan
    </button>

    <button
      data-symbol="sin("
      class="bg-gray-400/30 dark:bg-gray-500 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
    >
      sin
    </button>

    <button
      data-symbol="cos("
      class="bg-gray-400/30 dark:bg-gray-500 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
    >
      cos
    </button>

    <button
      data-symbol="^"
      class="bg-gray-400/30 dark:bg-gray-500 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
    >
      xʸ
    </button>

    <button
      data-symbol="²"
      class="bg-gray-400/30 dark:bg-gray-500 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >x²</button
    >

    <button
      data-symbol="³"
      class="bg-gray-400/30 dark:bg-gray-500 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >x³</button
    >
    

    <!-- Segunda fila  -->
    <button
      data-action="AbrirParentesis"
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
    >
      (
    </button>

    <button
      data-action="CerrarParentesis"
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
    >
      )
    </button>

    <button
      data-action="clear"
      class="dark:bg-orange-400/90 bg-blue-400 text-white p-2 rounded-lg border hover:font-bold dark:hover:bg-orange-500 hover:bg-blue-500"
      >AC</button
    >

    <button
      data-action="change"
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
    >
      +/-
    </button>

    <button
      data-symbol="%"
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >%</button
    >

    <button
      data-action="delete"
      class="dark:bg-orange-400/90 bg-blue-400 text-white p-2 rounded-lg border hover:font-bold dark:hover:bg-orange-500 hover:bg-blue-500"
      >del</button
    >


    <!-- Tercera fila  -->
    <button
      data-symbol="e"
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
    >
      e
    </button>

    <button
      data-symbol="1/"
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
    >
      1/x
    </button>

    <button
      data-symbol="7"
      class="bg-gray-500/90 dark:bg-gray-900 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >7</button
    >

    <button
      data-symbol="8"
      class="bg-gray-500/90 dark:bg-gray-900 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >8</button
    >

    <button
      data-symbol="9"
      class="bg-gray-500/90 dark:bg-gray-900 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >9</button
    >

    <button
      data-symbol="/"
      class="dark:bg-orange-400/90 bg-blue-400 text-white p-2 rounded-lg border hover:font-bold dark:hover:bg-orange-500 hover:bg-blue-500"
      >/</button
    >


    <!-- Cuarta fila  -->
    <button
      data-symbol="log("
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >log</button
    >

    <button
      data-symbol="π"
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
    >
      π
    </button>

    <button
      data-symbol="4"
      class="bg-gray-500/90 dark:bg-gray-900 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >4</button
    >

    <button
      data-symbol="5"
      class="bg-gray-500/90 dark:bg-gray-900 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >5</button
    >

    <button
      data-symbol="6"
      class="bg-gray-500/90 dark:bg-gray-900 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >6</button
    >

    <button
      data-symbol="x"
      class="dark:bg-orange-400/90 bg-blue-400 text-white p-2 rounded-lg border hover:font-bold dark:hover:bg-orange-500 hover:bg-blue-500"
    >
      x
    </button>


    <!-- Quinta fila  -->
    <button
      data-symbol="ln("
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
    >
      ln
    </button>

    <button
      data-action="factorial"
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >x!</button
    >

    <button
      data-symbol="1"
      class="bg-gray-500/90 dark:bg-gray-900 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >1</button
    >

    <button
      data-symbol="2"
      class="bg-gray-500/90 dark:bg-gray-900 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >2</button
    >

    <button
      data-symbol="3"
      class="bg-gray-500/90 dark:bg-gray-900 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >3</button
    >

    <button
      data-symbol="+"
      class="dark:bg-orange-400/90 bg-blue-400 text-white p-2 rounded-lg border hover:font-bold dark:hover:bg-orange-500 hover:bg-blue-500"
      >+</button
    >


    <!-- Sexta fila  -->
    <button
      data-action="copy"
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >Ans</button
    >

    <button
      data-symbol="√("
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >√</button
    >

    <button
      data-symbol="0"
      class="bg-gray-500/90 dark:bg-gray-900 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >0</button
    >

    <button
      data-action="point"
      class="bg-gray-400/90 dark:bg-gray-700 p-2 rounded-lg border hover:text-white hover:font-bold dark:hover:bg-gray-800 hover:bg-gray-500"
      >.</button
    >

    <button
      id="equalButton"
      class="dark:bg-orange-400/90 bg-blue-400 text-white p-2 rounded-lg border hover:font-bold dark:hover:bg-orange-500 hover:bg-blue-500"
    >
      =
    </button>

    <button
     class="dark:bg-orange-400/90 bg-blue-400 text-white p-2 rounded-lg border hover:font-bold dark:hover:bg-orange-500 hover:bg-blue-500"
    >
      -
    </button>
  </div>

  <form method="dialog">
    <button
      class="mt-3 px-3 py-2 bg-blue-400 hover:bg-blue-500 dark:bg-orange-400/90 dark:hover:bg-orange-500 text-white dark:text-white/80 rounded-lg border"
      >Cerrar</button
    >
  </form>


</dialog>








<script is:inline>
  const modalButtons = document.querySelectorAll("button[data-modal-id]");

  modalButtons.forEach((button) => {
    const modalId = button.getAttribute("data-modal-id");
    const modal = document.getElementById(modalId);

    if (!modal) {
      console.warn(" No se encontró el modal con id:", modalId);
      return;
    }

    button.addEventListener("click", () => {
      modal.showModal();

      const input = modal.querySelector("#input1");
      if (!input) return;

      let lastAnswer = "0";
      let listaResultados = [];

      
      if (!modal.dataset.listenersAdded) {
        // === Botón Borrar ===
        const delButton = modal.querySelector("button[data-action='delete']");
        delButton?.addEventListener("click", () => {
          input.value = input.value.slice(0, -1);
        });

        // === Cambiar signo ===
        const changeButton = modal.querySelector("button[data-action='change']");
        changeButton?.addEventListener("click", () => {
          if (!input.value) return;
          let numero = parseFloat(input.value);
          if (!isNaN(numero)) {
            input.value = (numero * -1).toString();
          }
        });

        // === Coma decimal ===
        const comaButton = modal.querySelector("button[data-action='point']");
        comaButton?.addEventListener("click", () => {
          const parts = input.value.split(/[\+\-\*\/]/);
          const lastPart = parts[parts.length - 1];
          if (!lastPart.includes(".")) {
            input.value += ".";
          }
        });


        // === Paréntesis ===
        let contadorParentesis = 0;

        const abrirPar = modal.querySelector("button[data-action='AbrirParentesis']");
        abrirPar?.addEventListener("click", () => {
          input.value += "(";
          contadorParentesis++;
        });


        const cerrarPar = modal.querySelector("button[data-action='CerrarParentesis']");
        cerrarPar?.addEventListener("click", () => {
          if (contadorParentesis > 0) {
            input.value += ")";
            contadorParentesis--;
          } else {
            input.value = "error";
          }
        });


        // === Factorial ===
        const factorialButton = modal.querySelector("button[data-action='factorial']");
        factorialButton?.addEventListener("click", () => {
          input.value += "!";
        });


        // === Borrar todo (AC) ===
        const acButton = modal.querySelector("button[data-action='clear']");
        acButton?.addEventListener("click", () => {
          input.value = "";
        });


        // === Insertar último resultado (Ans) ===
        const ansButton = modal.querySelector("button[data-action='copy']");
        ansButton?.addEventListener("click", () => {
          input.value += lastAnswer;
        });


        // === Botones de símbolos ===
        const symbolButtons = modal.querySelectorAll("button[data-symbol]");
        symbolButtons.forEach((btn) => {
          btn.addEventListener("click", () => {
            const symbol = btn.getAttribute("data-symbol");
            input.value += symbol;
            if (symbol.includes("(")) contadorParentesis++;
            if (symbol.includes(")")) contadorParentesis--;
          });
        });


        // === Botón igual ===
        const equalButton = modal.querySelector("#equalButton");
        equalButton?.addEventListener("click", () => {
          try {
            let expression = input.value
              .replace(/π/g, "Math.PI")
              .replace(/√/g, "Math.sqrt")
              .replace(/sin\(/g, "Math.sin(")
              .replace(/cos\(/g, "Math.cos(")
              .replace(/tan\(/g, "Math.tan(")
              .replace(/log\(/g, "Math.log10(")
              .replace(/ln\(/g, "Math.log(")
              .replace(/e/g, "Math.E")
              .replace(/Ans/g, lastAnswer)
              .replace(/\^/g, "**")
              .replace(/x/g, "*")
              .replace(/(\d+|\))²/g, "($1**2)")
              .replace(/(\d+|\))³/g, "($1**3)")
              .replace(/(\d+)%/g, "($1/100)")
              .replace(/(\d+)!/g, (_, n) => {
                let result = 1;
                for (let i = 2; i <= Number(n); i++) result *= i;
                return result;
              });

            const result = eval(expression);
            input.value = result;
            lastAnswer = result;
            listaResultados.push(lastAnswer);
          } catch (err) {
            input.value = "Error";
          }
        });


        // === HISTORIAL ===
        const historialMenu = modal.querySelector("#historialMenu");
        const historialLista = modal.querySelector("#historialLista");
        const cerrarHistorial = modal.querySelector("#cerrarHistorial");
        const historialIcono = modal.querySelector("[data-action='historialIcono']");

        if (historialIcono && historialMenu && historialLista) {
          historialIcono.addEventListener("click", () => {
            if (listaResultados.length === 0) {
              historialLista.innerHTML = "<li class='px-3 py-1'>No hay historial todavía.</li>";
            } else {
              historialLista.innerHTML = listaResultados
                .map((r, i) => `<li class="cursor-pointer hover:text-blue-500 px-3 py-1" data-valor="${r}">${i + 1}. ${r}</li>`)
                .reverse()
                .join("");

              historialLista.querySelectorAll("li").forEach((li) => {
                li.addEventListener("click", () => {
                  input.value += li.getAttribute("data-valor");
                  historialMenu.classList.add("hidden");
                });
              });
            }

            historialMenu.classList.toggle("hidden");
          });

          cerrarHistorial?.addEventListener("click", () => {
            historialMenu.classList.add("hidden");
          });
        }

        // Se qued aamrcado cuandos se han añadido los listeners
        modal.dataset.listenersAdded = "true";
      }
    });
  });
</script>



